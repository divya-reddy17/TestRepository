2.1 Write a java program to print person details in the format as shown below: 
2.3: Refer the class diagram given below and createa personclass. 
Create default and parameterized constructor for Person class. 
 
Also Create “PersonMain.java” program and write code for following operations:
 a) Create an object of Person class and specify person details through constructor. 
b) Display the details in the format  given in Lab assignment 2.1 

package lab2;

public class Person {
	String firstName;
	String lastName;
	 char gender;
	 int age;
	 float weight;
	 
	Person()
	{
		firstName="Divya";
		lastName="Bharathi";
		gender='F';
		age=20;
		weight=85.55f;
	}
	
	Person(String firstName,String lastName,char gender,int age,float weight)
	{
		this.firstName=Fname;
		this.lastName=Lname;
		this.gender=gender;
		this.age=age;
		this.weight=weight;
	}

	public String getLastName() {
		return lastName;
	}
	public void setLastName(String lname) {
		lastName = lname;
	}
	public String getFirstName() {
		return firstName;
	}
	public void setFname(String fname) {
		firstName = fname;
	}
	public char getGender() {
		return gender;
	}
	public void setGender(char gender) {
		this.gender = gender;
	}
	public int getAge() {
		return age;
	}
	public void setAge(int age) {
		this.age = age;
	}
	public float getWeight() {
		return weight;
	}
	public void setWeight(float weight) {
		this.weight = weight;
	}
}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Person p=new Person();
                                     System.out.println("Person Details:");
                                     System.out.println("_________________");
		System.out.println("FirstName :"+p.firstName);
		System.out.println("LastName :"+p.lastName);
		System.out.println("Gender :"+p.gender);
		System.out.println("Age:"+p.age);
		System.out.println("Weight :"+p.weight);
	
}	

}

2.2:  Write a program to accept a number from user as a command line argument and check whether the given number is positive or negative number
package lab2;
public class CheckNumber {

	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int a=Integer.parseInt(args[0]);
		if(a>=0)
			System.out.println("positive  number");
		else
			System.out.println("negative number");
		

	}
}
2.4: Modify Lab assignment 2.3 to accept phone number of a person. Create a newmethod to implement the same and also define method for displaying persondetails. 
package lab2;

class Person2
{
		private String firstName;
		private String lastName;
		private char gender;
		private int age;
		private double weight;
		private long number;


		Person2(String firstName,String lastName,
			char gender,
			int age,
			double weight,long number){
			 this.firstName=firstName;
			 this.lastName=lastName;
			 this.gender=gender;
			 this.age=age;
			 this.weight=weight;
			 this.number=number;
		}
		
		public long getNumber() {
			return number;
		}

		public void setNumber(long number) {
			this.number = number;
		}

		public String getFirstName() {
			return firstName;
		}
		public void setFirstName(String fname) {
			this.firstName = fname;
		}
		public String getLastName() {
			return lastName;
		}
		public void setLastName(String lname) {
			this.lastName = lname;
		}
		public char getGender() {
			return gender;
		}
		public void setGender(char gender) {
			this.gender = gender;
		}
		public int getAge() {
			return age;
		}
		public void setAge(int age) {
			this.age = age;
		}
		public double getWeight() {
			return weight;
		}

		
		public void setWeight(double weight) {
			this.weight = weight;
		}
	 
	}
		public static void main(String[] args){
				Person2 p=new Person2("Divya", "Bharathi",'F',20,85.55,1236577) ;
				
				System.out.println("First name:"+p.getFirstName());
				System.out.println("Last name:"+p.getLastName());
				System.out.println("Age:"+p.getAge());
				System.out.println("Gender:"+p.getGender());
				System.out.println("Weight:"+p.getWeight());	
				System.out.println("Number:"+p.getNumber());
			}
			
			
	}



2.5: Modify the above program, to accept only ‘M’ or ‘F’ as gender field values. Use Enumeration for implementing the same. 
package lab2;

public class PersonEnum {

	package lab2;
enum Gender
{
m,f
}
public class PersonEnum 
{
private String firstName,lastName;
String phoneNo;
Gender gender;

public String getFirstName()  
{
	return firstName;
}
public void setFirstName(String firstName)
{
	this.firstName = firstName;
}
public String getLastName() 
{
	return lastName;
}
public void setLasttName(String lastName)
{
	this.lastName = lastName;
}
public Gender getGender() 
{
	return gender;
}
public void setGender(Gender gender)
{
	this.gender = gender;
}
public String getPhoneNo()  
{
	return phoneNo;
}  
public void setPhoneNo(String phoneNo)
{
	this.phoneNo = phoneNo; 
}	

public PersonEnum(String firstName,String lastName,Gender gender,String phoneNo)
{
this.firstName=firstName;
this.lastName=lastName;
this.gender=gender;
this.phoneNo=phoneNo;
}
public PersonEnum()
{
} 
void display()
{
System.out.println("FirstName: "+firstName);
System.out.println("LastName:"+lastName); 
System.out.println("gender:"+gender);
System.out.println("phoneNo:"+phoneNo);

}

public static void main(String args[])

{

	PersonEnum per = new PersonEnum("Divya","Bharathi",Gender.f,"1236577");
    per.display();    
}

}
